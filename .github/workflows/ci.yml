name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test_and_deploy:
    name: Build and test and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
      - name: Build
        run: cargo build --release --all-features --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
        if: github.event_name == 'pull_request'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
              registry: registry.k8s.bruf.io
              username: debian
              password: ${{ secrets.DOCKER_PASS }}

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo registry.k8s.bruf.io/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        run: echo "LATEST_TAG=$(echo registry.k8s.bruf.io/${{ github.event.repository.name }}:latest" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags:  ${{ env.IMAGE_URL }}, ${{ env.LATEST_TAG }}
          platforms: linux/arm64,linux/amd64
